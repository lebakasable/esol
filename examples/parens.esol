set Parens { '(' ')' }
set Bits { 0 1 }

trace Entry { & '(' '(' ')' ')' & 0 }

case Entry & & -> Pick

for p : Parens
case Pick p & -> (Pick p)
case Pick & & -> Verify

case Verify 0 0 -> Balanced
case Verify 1 1 -> Unbalanced

for p a : Parens
case (Pick p) a a -> (Pick p)

case (Pick '(') & & -> Inc
case (Pick ')') & & -> Dec

case Inc 0 1 <- (Reset Bits)
case Inc 1 1 -> Inc

for a : Bits
case (Reset Bits) a a <- (Reset Bits)
case (Reset Bits) & & <- (Reset Parens)

for p : Parens
case (Reset Parens) p p <- (Reset Parens)
case (Reset Parens) & & -> Pick

case Dec  1 1 -> Dec
case Dec  0 0 <- Dec1
case Dec1 1 0 <- (Reset Bits)
case Dec1 & & <- Unbalanced
